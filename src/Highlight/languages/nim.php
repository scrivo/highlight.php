<?php

function nim($hljs)
{
    $TYPES = array('int', 'int8', 'int16', 'int32', 'int64', 'uint', 'uint8', 'uint16', 'uint32', 'uint64', 'float', 'float32', 'float64', 'bool', 'char', 'string', 'cstring', 'pointer', 'expr', 'stmt', 'void', 'auto', 'any', 'range', 'array', 'openarray', 'varargs', 'seq', 'set', 'clong', 'culong', 'cchar', 'cschar', 'cshort', 'cint', 'csize', 'clonglong', 'cfloat', 'cdouble', 'clongdouble', 'cuchar', 'cushort', 'cuint', 'culonglong', 'cstringarray', 'semistatic');
    $KEYWORDS = array('addr', 'and', 'as', 'asm', 'bind', 'block', 'break', 'case', 'cast', 'const', 'continue', 'converter', 'discard', 'distinct', 'div', 'do', 'elif', 'else', 'end', 'enum', 'except', 'export', 'finally', 'for', 'from', 'func', 'generic', 'guarded', 'if', 'import', 'in', 'include', 'interface', 'is', 'isnot', 'iterator', 'let', 'macro', 'method', 'mixin', 'mod', 'nil', 'not', 'notin', 'object', 'of', 'or', 'out', 'proc', 'ptr', 'raise', 'ref', 'return', 'shared', 'shl', 'shr', 'static', 'template', 'try', 'tuple', 'type', 'using', 'var', 'when', 'while', 'with', 'without', 'xor', 'yield');
    $BUILT_INS = array('stdin', 'stdout', 'stderr', 'result');
    $LITERALS = array('true', 'false');

    return (object) array('name' => 'Nim', 'keywords' => (object) array('keyword' => $KEYWORDS, 'literal' => $LITERALS, 'type' => $TYPES, 'built_in' => $BUILT_INS), 'contains' => array((object) array('className' => 'meta', 'begin' => new Highlight\RegEx('/\\\\\\{\\\\\\./'), 'end' => new Highlight\RegEx('/\\\\\\.\\\\\\}/'), 'relevance' => 10), (object) array('className' => 'string', 'begin' => new Highlight\RegEx('/\\[a\\-zA\\-Z\\]\\\\w\\*"/'), 'end' => new Highlight\RegEx('/"/'), 'contains' => array((object) array('begin' => new Highlight\RegEx('/""/')))), (object) array('className' => 'string', 'begin' => new Highlight\RegEx('/\\(\\[a\\-zA\\-Z\\]\\\\w\\*\\)\\?"""/'), 'end' => new Highlight\RegEx('/"""/')), $hljs->QUOTE_STRING_MODE, (object) array('className' => 'type', 'begin' => new Highlight\RegEx('/\\\\b\\[A\\-Z\\]\\\\w\\+\\\\b/'), 'relevance' => 0), (object) array('className' => 'number', 'relevance' => 0, 'variants' => array((object) array('begin' => new Highlight\RegEx('/\\\\b\\(0\\[xX\\]\\[0\\-9a\\-fA\\-F\\]\\[_0\\-9a\\-fA\\-F\\]\\*\\)\\(\'\\?\\[iIuU\\]\\(8\\|16\\|32\\|64\\)\\)\\?/')), (object) array('begin' => new Highlight\RegEx('/\\\\b\\(0o\\[0\\-7\\]\\[_0\\-7\\]\\*\\)\\(\'\\?\\[iIuUfF\\]\\(8\\|16\\|32\\|64\\)\\)\\?/')), (object) array('begin' => new Highlight\RegEx('/\\\\b\\(0\\(b\\|B\\)\\[01\\]\\[_01\\]\\*\\)\\(\'\\?\\[iIuUfF\\]\\(8\\|16\\|32\\|64\\)\\)\\?/')), (object) array('begin' => new Highlight\RegEx('/\\\\b\\(\\\\d\\[_\\\\d\\]\\*\\)\\(\'\\?\\[iIuUfF\\]\\(8\\|16\\|32\\|64\\)\\)\\?/')))), $hljs->HASH_COMMENT_MODE));
}
$module->exports = $nim;
